# ----------------------------------------------------------------------------
# Copyright (c) 2023 SAP CX Tools
# ----------------------------------------------------------------------------

# Location of the file for the global platform spring application context
sapcommercetoolkit.application-context=sapcommercetoolkit-spring.xml

##############################################################################
# ImpEx global import configuration
##############################################################################
sapcommercetoolkit.impeximport.configuration.legacymode=false
sapcommercetoolkit.impeximport.configuration.enablecodeexecution=true
sapcommercetoolkit.impeximport.configuration.validationmode=strict
sapcommercetoolkit.impeximport.configuration.defaultlocale=en

##############################################################################
# Environment specific flags
#
# legacysystemsetup - Uses the legacy system setup, ie. running the impex from this extension
# configurationfile - Absolute filename for the persistent configuration of
#                     the system setup environment, defaults to
#                     ${HYBRIS_DATA_DIR}/sapcommercetoolkit/configuration.properties
# isdevelopment     - Should be set on local development environment.
#                     If set to true, sample and test data is imported
#                     automatically during system initialization
# supportlocalizedfiles - If set to true, import of a file will also trigger
#                     an import of the file with pattern <file>_isocode.<ext>
#                     for all available languages within the system
# importsampledata  - If set to true, sample data is imported automatically
#                     during system initialization or system update
# importtestdata    - If set to true, test data is imported automatically
#                     during system initialization or system update
##############################################################################
sapcommercetoolkit.impeximport.environment.legacysystemsetup=true
sapcommercetoolkit.impeximport.environment.configurationfile=${HYBRIS_DATA_DIR}/sapcommercetoolkit/configuration.properties
sapcommercetoolkit.impeximport.environment.isdevelopment=false
sapcommercetoolkit.impeximport.environment.supportlocalizedfiles=false
sapcommercetoolkit.impeximport.environment.importsampledata=false
sapcommercetoolkit.impeximport.environment.importtestdata=false

##############################################################################
# ImpEx import filesets
#
# Import files can be specified in any property file that is considered as a
# SAP CX configuration location, e.g.:
# - properties area of manifest.json file
# - global local.properties file
# - extension specific project.properties file
#
# The pattern needs to apply to the following rule:
# sapcommercetoolkit.impeximport.<type>.[<version>.]<order>.<name>
#
# - <type>     must be one of:
#              elementarydata - only imported during initialization
#              releasepatch   - only imported once per system during update
#              essentialdata  - always imported during initialization or update
#              projectdata    - only imported if configured or selected manually
# - <version>  only required for type releasepatch!
#              It must identify the release version, that should be alphanumeric
#              In other words you must guarantee that the order or the release
#              versions is correct, as the mechanism relies on alphanumerical order
# - <order>    optional: additional level for alphanumerical ordering
# - <name>     identifier for the import (can be any unique number or text)
#
# Examples:
# sapcommercetoolkit.impeximport.elementarydata.0100.coredata=/path/to/file.impex
# sapcommercetoolkit.impeximport.elementarydata.0500.catalogs=/path/to/file.impex
# sapcommercetoolkit.impeximport.releasepatch.release1x0x0.0001.datamigration=/path/to/file.impex
# sapcommercetoolkit.impeximport.releasepatch.release1x1x0.0001.datamigration=/path/to/file.impex
# sapcommercetoolkit.impeximport.releasepatch.release2x0x0.0001.insertdefaultvalue=/path/to/file.impex
# sapcommercetoolkit.impeximport.essentialdata.0010.userrights=/path/to/file.impex
# sapcommercetoolkit.impeximport.essentialdata.0300.solrconfiguration=/path/to/file.impex
# sapcommercetoolkit.impeximport.essentialdata.5000.cmstemplates=/path/to/file.impex
# sapcommercetoolkit.impeximport.overlay.1000.core-essential=/path/to/file.impex
# sapcommercetoolkit.impeximport.sampledata.0100.categories=/path/to/file.impex
# sapcommercetoolkit.impeximport.sampledata.0200.classificationsystem=/path/to/file.impex
# sapcommercetoolkit.impeximport.sampledata.0500.products=/path/to/file.impex
# sapcommercetoolkit.impeximport.sampledata.1000.users=/path/to/file.impex
# sapcommercetoolkit.impeximport.sampledata.5000.cms=/path/to/file.impex
# sapcommercetoolkit.impeximport.testdata.0100.categories=/path/to/file.impex
# sapcommercetoolkit.impeximport.testdata.0500.products=/path/to/file.impex
# sapcommercetoolkit.impeximport.testdata.1000.users=/path/to/file.impex
# sapcommercetoolkit.impeximport.testdata.5000.cms=/path/to/file.impex
#
#
# For full support, one should activate the project data of this extension, e.g.
# update.executeProjectData.extensionName.list=sapcommercetoolkit
##############################################################################


##############################################################################
# Html Email Service configuration
#
# The HtmlEmailService requires all templates to be stored within the following class paths:
# /email-templates/html/**
# /email-templates/text/**
#
# For localization of the emails, message bundles are preconfigured. Unfortunately, a message source cannot
# hold wildcards and, therefore, this extension has 5 prepared configuration paths that are resolved during
# system startup. If you want to contribute to the message bundle for email templates, please take one of the
# properties below, and change the path accordingly. The order is important, see note below!
#
# Note: You cannot simply add your messages to a file called /email-templates/messages, because the message
# source will stop file resolving, after the first match, ie. a file already existing in a previous message
# source will stop the resolver from loading your keys from your local file with the same name.
##############################################################################
sapcommercetoolkit.htmlEmailService.configuration.messagebundle1=classpath:/email-templates/messages
sapcommercetoolkit.htmlEmailService.configuration.messagebundle2=classpath:/email-templates/messages
sapcommercetoolkit.htmlEmailService.configuration.messagebundle3=classpath:/email-templates/messages
sapcommercetoolkit.htmlEmailService.configuration.messagebundle4=classpath:/email-templates/messages
sapcommercetoolkit.htmlEmailService.configuration.messagebundle5=classpath:/email-templates/messages


##############################################################################
# Html Email Service Fake configuration
#
# In order to activate the fake, you need to add a spring profile to your configuration:
# spring.profiles.active=sapcommercetools-fake-localmails
#
# - <method>            the method to store mails locally, either file or database
# - <directory>         the directory to which the email files will be stored to
# - <extension>         the extension for the email files, defaults to eml
# - <filenamepattern>   the pattern for the generated files. It can be adjusted with the following parameters:
#                       - timestamp: the timestamp of the moment of sending
#                       - datetime:  the date/time of the moment of sending (format: YYYYMMdd-HHmmssS)
#                       - subject:   the subject of the email
#                       - from:      the senders address (at sign replaced with __at__)
#                       - to:        the (first) receivers address (at sign replaced with __at__)
#                       - extension: the extension as configured above
# - <mediafolder>       the media folder to place fake email media items into (default: fake-emails)
# - <daysToKeep>        the number of days to keep local emails in the database (default: 7)
#
# Note: Please make sure that you have set the following properties, otherwise the email generation process will fail:
# - mail.smtp.server (DEFAULT: MISSING!!!)
# - mail.from (DEFAULT: test@hybris.de)
##############################################################################
sapcommercetoolkit.fakes.htmlEmailService.localstorage.method=file
sapcommercetoolkit.fakes.htmlEmailService.localstorage.directory=${HYBRIS_LOG_DIR}/mails
sapcommercetoolkit.fakes.htmlEmailService.localstorage.filenamepattern={timestamp}_{subject}.{extension}
sapcommercetoolkit.fakes.htmlEmailService.localstorage.extension=eml
sapcommercetoolkit.fakes.htmlEmailService.localstorage.mediafolder=fake-emails
sapcommercetoolkit.fakes.htmlEmailService.localstorage.daysToKeep=7
